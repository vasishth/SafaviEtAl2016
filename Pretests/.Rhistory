for(i in 1:10){
abline(a=ab[i,1],b=ab[i,2])
}
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
MD497.df2<-read.table("/home/samar/psych-research/books/stats/script/MD497df.txt",header=T)
with(MD497.df,tapply(rt,list(subj,noise),mean,na.rm=TRUE))
with(MD497.df2,tapply(rt,list(subj,noise),mean,na.rm=TRUE))
(lmlist.fm2<-lmList(rt~noise|subj,MD497.df2))
summary(m2.lmer<-lmer(rt~noise+(1+noise|subj),MD497.df2))
multiplot <- function(row,col){
par(mfrow=c(row,col),pty="s")
}
multiplot(2,2)
plot(as.numeric(MD497.df2$noise)-1,MD497.df2$rt,axes=F,xlab="noise",ylab="rt",main="ordinary linear model",sub="s8, missing data")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(lmlist.fm2$s8)
abline(lm(rt~noise,MD497.df2),lwd=3,col="red")
(a<-fixef(m2.lmer)[1])
(b<-fixef(m2.lmer)[2])
(newa<-a+ranef(m2.lmer)$subj[1])
(newb<-b+ranef(m2.lmer)$subj[2])
ab<-data.frame(newa=newa,b=newb)
plot(as.numeric(MD497.df2$noise)-1,MD497.df2$rt,axes=F,
main="varying intercepts and slopes",
sub="s8, missing data",
xlab="noise",ylab="rt")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(a=ab[9,1],b=ab[9,2])
abline(lm(rt~noise,MD497.df2),lwd=3,col="red")
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,axes=F,xlab="noise",ylab="rt",main="ordinary linear model",
,sub="s8, no missing data")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(lmlist.fm1$s8)
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
(a<-fixef(m2.lmer)[1])
(b<-fixef(m2.lmer)[2])
(newa<-a+ranef(m1.lmer)$subj[1])
(newb<-b+ranef(m1.lmer)$subj[2])
ab<-data.frame(newa=newa,b=newb)
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,axes=F,
main="varying intercepts and slopes",sub="s8, no missing data",xlab="noise",ylab="rt")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(a=ab[9,1],b=ab[9,2])
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
library(languageR)
head(lexdec[,c(1,2,5)])
install.packages('languageR')
library(languageR)
head(lexdec[,c(1,2,5)])
means.lexdec<-with(lexdec,tapply(RT,NativeLanguage,mean))
summary(lm(RT~NativeLanguage,lexdec))
sessionInfo
sessionInfo()
install.packages("em")
sessionInfo
sessionInfo()
install.packages("em")
installed.packages()
?scale
library(em2)
?em2
library(em2)
?em2
library(stan)
setwd("~/Dropbox/Persian CP  (pre-tests, SPR & ET)/2. SPR")
data1<-read.table("Persiane1-regions.DAT", header=T)
data1$pos<-factor(data1$pos)
data1$resp<-factor(data1$resp)
data1$cond<-factor(data1$cond)
means.reg<-with(data1,tapply(rt,IND=list(cond,roi),mean))
means<-with(subset(data1, roi=="crit"),tapply(rt,cond,mean))
data1$dist<-ifelse(data1$cond%in%c("a","c"),-1,1)
## pred 1, -1
data1$pred<-ifelse(data1$cond%in%c("a","b"),-1,1)
#nested
data1$pred.dist <- ifelse(data1$cond=="a",-1,
ifelse(data1$cond=="b",1,0))
data1$nopred.dist <- ifelse(data1$cond=="c",-1,
ifelse(data1$cond=="d",1,0))
datae1<-data1
library(plyr)
data1 <- subset(data1, pos!='?')
a.regions<-c("predep","dep","precrit","crit","postcrit","post")
b.regions<-c("predep","dep","precrit","crit","postcrit","post")
c.regions<-c("predep","dep","precrit","crit","postcrit","post")
d.regions<-c("predep","dep","precrit","crit","postcrit","post")
regions<-c(a.regions,b.regions,c.regions,d.regions)
region.id<-rep(1:6,4)
cond.id<-rep(letters[1:4],each=6)
region.df<-data.frame(cond=factor(cond.id),
region.id=region.id,
roi=factor(regions))
data1.uniq.reg<-ddply(data1,
.(subj, item, cond, roi),
summarize,
rt = sum(rt))
data1.merged<-merge(data1.uniq.reg,region.df,
by.x=c("cond","roi"))
data1.merged$cond<-droplevels(data1.merged$cond)
pred<-factor(ifelse(data1.merged$cond%in%c("a","b"),"pred","nopred"),
levels=c("pred","nopred"))
dist<-factor(ifelse(data1.merged$cond%in%c("a","c"),"short","long"),
levels=c("short","long"))
data1.merged$pred<-pred
data1.merged$dist<-dist
library(reshape)
library(ggplot2)
data.rs <- melt(data1.merged,
id=c("pred","dist","cond","roi",
"region.id","subj"),
measure=c("rt"),
na.rm=TRUE)
data.id  <- data.frame(cast(data.rs,
subj+pred+dist+cond+roi+region.id ~ .,
function(x) c(rt=mean(x), N=length(x) ) ))
#mean of mean rt of each subject
GM <- mean(tapply(data.id$rt, data.id$subj, mean))
data.id <- ddply(data.id, .(subj),
transform, rt.w = rt - mean(rt) + GM)
temp<-melt(data.id, id.var=c("subj","pred","dist","cond","roi","region.id"),
measure.var="rt.w")
M.id.w <- cast(temp, pred+dist+cond+roi+region.id  ~ .,
function(x) c(M=mean(x), SE=sd(x)/sqrt(length(x)), N=length(x) ) )
M.id.w.pred <- cast(temp, pred+roi+region.id  ~ .,
function(x) c(M=mean(x), SE=sd(x)/sqrt(length(x)), N=length(x) ) )
k<-1
(p1a<-ggplot(subset(M.id.w,roi=="crit"),
aes(x=dist, y=M,group=pred)) +
geom_point(shape=21,fill="white",size=k*3) +
geom_line(aes(linetype=pred),size=k) +
geom_errorbar(aes(ymin=M-2*SE, ymax=M+2*SE),
width=.1,size=k)+
xlab("Distance")+
ylab("reading time [Raw RT in ms]")+
scale_colour_hue(name="Predicate type",
breaks=c("pred", "nopred"),
labels=c("CP", "SP"),
l=40)+
labs(title="Critical region [Verb]") +
theme_bw() +
labs(legend.position=c(.87, .6))
)
data1<-read.table("Persiane1-regions.DAT", header=T)
data1$pos<-factor(data1$pos)
data1$resp<-factor(data1$resp)
data1$cond<-factor(data1$cond)
data1$dist<-ifelse(data1$cond%in%c("a","c"),-1,1)
## pred 1, -1
data1$pred<-ifelse(data1$cond%in%c("a","b"),-1,1)
#nested
data1$pred.dist <- ifelse(data1$cond=="a",-1,
ifelse(data1$cond=="b",1,0))
data1$nopred.dist <- ifelse(data1$cond=="c",-1,
ifelse(data1$cond=="d",1,0))
data1 <- subset(data1, pos!='?')
a.regions<-c("predep","dep","precrit","crit","postcrit","post")
b.regions<-c("predep","dep","precrit","crit","postcrit","post")
c.regions<-c("predep","dep","precrit","crit","postcrit","post")
d.regions<-c("predep","dep","precrit","crit","postcrit","post")
regions<-c(a.regions,b.regions,c.regions,d.regions)
region.id<-rep(1:6,4)
cond.id<-rep(letters[1:4],each=6)
region.df<-data.frame(cond=factor(cond.id),
region.id=region.id,
roi=factor(regions))
#merge multiple regions with same id
data1.uniq.reg<-ddply(data1,
.(subj, item, cond, roi),
summarize,
rt = sum(rt))
data1.merged<-merge(data1.uniq.reg,region.df,
by.x=c("cond","roi"))
data1.merged$cond<-droplevels(data1.merged$cond)
Expectation<-factor(ifelse(data1.merged$cond%in%c("a","b"),"strong-exp","weak-exp"),
levels=c("strong-exp","weak-exp"))
dist<-factor(ifelse(data1.merged$cond%in%c("a","c"),"short","long"),
levels=c("short","long"))
data1.merged$Expectation<-Expectation
data1.merged$dist<-dist
data.rs <- melt(data1.merged,
id=c("Expectation","dist","cond","roi",
"region.id","subj"),
measure=c("rt"),
na.rm=TRUE)
data.id  <- data.frame(cast(data.rs,
subj+Expectation+dist+cond+roi+region.id ~ .,
function(x) c(rt=mean(x), N=length(x) ) ))
GM <- mean(tapply(data.id$rt, data.id$subj, mean))
data.id <- ddply(data.id, .(subj),
transform, rt.w = rt - mean(rt) + GM)
temp<-melt(data.id, id.var=c("subj","Expectation","dist","cond","roi","region.id"),
measure.var="rt.w")
M.id.w <- cast(temp, Expectation+dist+cond+roi+region.id  ~ .,
function(x) c(M=mean(x), SE=sd(x)/sqrt(length(x)), N=length(x) ) )
M.id.w.pred <- cast(temp, Expectation+roi+region.id  ~ .,
function(x) c(M=mean(x), SE=sd(x)/sqrt(length(x)), N=length(x) ) )
k<-1
(p1a<-ggplot(subset(M.id.w,roi=="crit"),
aes(x=dist, y=M,group=Expectation)) +
geom_point(shape=21,fill="white",size=k*3) +
geom_line(aes(linetype=Expectation),size=k) +
geom_errorbar(aes(ymin=M-2*SE, ymax=M+2*SE),
width=.1,size=k)+
xlab("Distance")+
ylab("reading time [Raw RT in ms]")+
scale_colour_hue(name="Predicate type",
breaks=c("strong-exp", "weak-exp"),
labels=c("CP", "SP"),
l=40)+
labs(title="Critical region [Verb]") +
theme_bw() +
labs(legend.position=c(.87, .6))
)
data2<-read.table("Persiane2-regions.DAT", header=T)
data2$pos<-factor(data2$pos)
data2$resp<-factor(data2$resp)
data2$cond<-factor(data2$cond)
data2$dist<-ifelse(data2$cond%in%c("a","c"),-1,1)
## pred 1, -1
data2$pred<-ifelse(data2$cond%in%c("a","b"),-1,1)
#nested
data2$pred.dist <- ifelse(data2$cond=="a",-1,
ifelse(data2$cond=="b",1,0))
data2$nopred.dist <- ifelse(data2$cond=="c",-1,
ifelse(data2$cond=="d",1,0))
data2 <- subset(data2, pos!='?')
a.regions<-c("predep","dep","precrit","crit","postcrit","post")
b.regions<-c("predep","dep","precrit","crit","postcrit","post")
c.regions<-c("predep","dep","precrit","crit","postcrit","post")
d.regions<-c("predep","dep","precrit","crit","postcrit","post")
regions<-c(a.regions,b.regions,c.regions,d.regions)
region.id<-rep(1:6,4)
cond.id<-rep(letters[1:4],each=6)
region.df<-data.frame(cond=factor(cond.id),
region.id=region.id,
roi=factor(regions))
#merge multiple regions with same id
data2.uniq.reg<-ddply(data2,
.(subj, item, cond, roi),
summarize,
rt = sum(rt))
data2.merged<-merge(data2.uniq.reg,region.df,
by.x=c("cond","roi"))
data2.merged$cond<-droplevels(data2.merged$cond)
Expectation<-factor(ifelse(data2.merged$cond%in%c("a","b"),"strong-exp","weak-exp"),
levels=c("strong-exp","weak-exp"))
dist<-factor(ifelse(data2.merged$cond%in%c("a","c"),"short","long"),
levels=c("short","long"))
data2.merged$Expectation<-Expectation
data2.merged$dist<-dist
data.rs <- melt(data2.merged,
id=c("Expectation","dist","cond","roi",
"region.id","subj"),
measure=c("rt"),
na.rm=TRUE)
data.id  <- data.frame(cast(data.rs,
subj+Expectation+dist+cond+roi+region.id ~ .,
function(x) c(rt=mean(x), N=length(x) ) ))
GM <- mean(tapply(data.id$rt, data.id$subj, mean))
data.id <- ddply(data.id, .(subj),
transform, rt.w = rt - mean(rt) + GM)
temp<-melt(data.id, id.var=c("subj","Expectation","dist","cond","roi","region.id"),
measure.var="rt.w")
M.id.w <- cast(temp, Expectation+dist+cond+roi+region.id  ~ .,
function(x) c(M=mean(x), SE=sd(x)/sqrt(length(x)), N=length(x) ) )
M.id.w.pred <- cast(temp, Expectation+roi+region.id  ~ .,
function(x) c(M=mean(x), SE=sd(x)/sqrt(length(x)), N=length(x) ) )
k<-1
(p1a<-ggplot(subset(M.id.w,roi=="crit"),
aes(x=dist, y=M,group=Expectation)) +
geom_point(shape=21,fill="white",size=k*3) +
geom_line(aes(linetype=Expectation),size=k) +
geom_errorbar(aes(ymin=M-2*SE, ymax=M+2*SE),
width=.1,size=k)+
xlab("Distance")+
ylab("reading time [Raw RT in ms]")+
scale_colour_hue(name="Predicate type",
breaks=c("strong-exp", "weak-exp"),
labels=c("CP", "SP"),
l=40)+
labs(title="Critical region [Verb]") +
theme_bw() +
labs(legend.position=c(.87, .6))
)
M.id.w.cp<-subset(M.id.w,Expectation=="strong-exp")
M.id.w.cp$Expectation<-droplevels(M.id.w.cp$Expectation)
M.id.w.sp<-subset(M.id.w,Expectation=="weak-exp")
M.id.w.sp$Expectation<-droplevels(M.id.w.sp$Expectation)
M.id.w.short<-subset(M.id.w,dist=="short")
M.id.w.short$dist <- droplevels(M.id.w.short$dist)
M.id.w.long<-subset(M.id.w,dist=="long")
M.id.w.long$dist <- droplevels(M.id.w.long$dist)
byregion.plot<-function(data,
mytitle,k=1,
x.lab="position",
y.lab="reading time [msec]"){
ggplot(data,aes(x=region.id,y=M,
group=Expectation)) +
geom_point(shape=21,size=k*2) +
geom_line(aes(linetype=Expectation),size=k) +
geom_errorbar(aes(ymin=M-2*SE,
ymax=M+2*SE),
width=.1,size=k)+
#xlab(x.lab)+
scale_x_continuous(x.lab, breaks = 1:6, labels = c("predep","dep","precrit","crit","postcrit","post"))+
#ylab(y.lab)+
#opts(title=mytitle) +
#theme_bw()+
#theme(axis.text.x = element_text(size=7))
labs(x ='\nPosition', y = 'Reading time [msec]\n')+
theme_bw()+
ggtitle(mytitle)}
(byregion.plot(M.id.w.long,
mytitle="Effect of predicate type (long conditions)",k=1,
x.lab="position",y.lab="reading time [msec]")
)
(byregion.plot(M.id.w.long,
mytitle="Effect of expectation (long conditions)",k=1,
x.lab="position",y.lab="reading time [msec]")
)
(byregion.plot(M.id.w.short,
mytitle="Effect of expectation (short conditions)",k=1,
x.lab="position",y.lab="reading time [msec]")
)
M.id.w.cp<-subset(M.id.w,Expectation=="strong-exp")
M.id.w.cp$Expectation<-droplevels(M.id.w.cp$Expectation)
M.id.w.sp<-subset(M.id.w,Expectation=="weak-exp")
M.id.w.sp$Expectation<-droplevels(M.id.w.sp$Expectation)
byregion.plot<-function(data,
mytitle,k=1,
x.lab="position",
y.lab="reading time [Raw rt]"){
ggplot(data,aes(x=region.id,y=M,
group=dist)) +
geom_point(shape=21,size=k*2) +
geom_line(aes(linetype=dist),size=k) +
geom_errorbar(aes(ymin=M-2*SE,
ymax=M+2*SE),
width=.1,size=k)+
#xlab(x.lab)+
scale_x_continuous(x.lab, breaks = 1:6, labels = c("predep","dep","precrit","crit","postcrit","post"))+
#ylab(y.lab)+
#opts(title=mytitle) +
#theme_bw()+
#theme(axis.text.x = element_text(size=7))
labs(x ='\nPosition', y = 'Reading time [msec]\n')+
theme_bw()+
ggtitle(mytitle)}
(plot.cp<-byregion.plot(M.id.w.cp,
mytitle="Effect of distance [strong expectation]",k=1,
x.lab="position",y.lab="reading time [Raw rt]")
)
(plot.sp<-byregion.plot(M.id.w.sp,
mytitle="Effect of distance [weak expectation]",k=1,
x.lab="position",y.lab="reading time [log ms]")
)
M.id.w.cp<-subset(M.id.w,Expectation=="strong-exp")
M.id.w.cp$Expectation<-droplevels(M.id.w.cp$Expectation)
M.id.w.sp<-subset(M.id.w,Expectation=="weak-exp")
M.id.w.sp$Expectation<-droplevels(M.id.w.sp$Expectation)
byregion.plot<-function(data,
mytitle,k=1,
x.lab="position",
y.lab="reading time [Raw rt]"){
ggplot(data,aes(x=region.id,y=M,
group=dist)) +
geom_point(shape=21,size=k*2) +
geom_line(aes(linetype=dist),size=k) +
geom_errorbar(aes(ymin=M-2*SE,
ymax=M+2*SE),
width=.1,size=k)+
#xlab(x.lab)+
scale_x_continuous(x.lab, breaks = 1:6, labels = c("predep","dep","precrit","crit","postcrit","post"))+
#ylab(y.lab)+
#opts(title=mytitle) +
#theme_bw()+
#theme(axis.text.x = element_text(size=7))
labs(x ='\nPosition', y = 'Reading time [msec]\n')+
theme_bw()+
ggtitle(mytitle)}
(plot.cp<-byregion.plot(M.id.w.cp,
mytitle="Effect of distance [strong expectation]",k=1,
x.lab="position",y.lab="reading time [Raw rt]")
)
(plot.sp<-byregion.plot(M.id.w.sp,
mytitle="Effect of distance [weak expectation]",k=1,
x.lab="position",y.lab="reading time [log ms]")
)
M.id.w.short<-subset(M.id.w,dist=="short")
M.id.w.short$dist <- droplevels(M.id.w.short$dist)
M.id.w.long<-subset(M.id.w,dist=="long")
M.id.w.long$dist <- droplevels(M.id.w.long$dist)
byregion.plot<-function(data,
mytitle,k=1,
x.lab="position",
y.lab="reading time [msec]"){
ggplot(data,aes(x=region.id,y=M,
group=Expectation)) +
geom_point(shape=21,size=k*2) +
geom_line(aes(linetype=Expectation),size=k) +
geom_errorbar(aes(ymin=M-2*SE,
ymax=M+2*SE),
width=.1,size=k)+
#xlab(x.lab)+
scale_x_continuous(x.lab, breaks = 1:6, labels = c("predep","dep","precrit","crit","postcrit","post"))+
#ylab(y.lab)+
#opts(title=mytitle) +
#theme_bw()+
#theme(axis.text.x = element_text(size=7))
labs(x ='\nPosition', y = 'Reading time [msec]\n')+
theme_bw()+
ggtitle(mytitle)}
(byregion.plot(M.id.w.long,
mytitle="Effect of expectation (long conditions)",k=1,
x.lab="position",y.lab="reading time [msec]")
)
(byregion.plot(M.id.w.short,
mytitle="Effect of expectation (short conditions)",k=1,
x.lab="position",y.lab="reading time [msec]")
)
data1<-read.table("Persiane1-regions.DAT", header=T)
data1$pos<-factor(data1$pos)
data1$resp<-factor(data1$resp)
data1$cond<-factor(data1$cond)
data1.q <- subset(data1, pos=="?")
data1.q$resp<- as.numeric(as.character(data1.q$resp))
meansq<-round(100*with(data1.q,tapply(resp,cond,mean)),digits=0)
meansq
data1$dist<-ifelse(data1$cond%in%c("a","c"),-1,1)
## pred 1, -1
data1$pred<-ifelse(data1$cond%in%c("a","b"),-1,1)
#nested
data1$pred.dist <- ifelse(data1$cond=="a",-1,
ifelse(data1$cond=="b",1,0))
data1$nopred.dist <- ifelse(data1$cond=="c",-1,
ifelse(data1$cond=="d",1,0))
datae1<-data1
library(lme4)
m1.q<-glmer(resp~dist*pred+(1|subj)+(1|item),subset(data1, pos=="?"), family=binomial())
summary(m1.q)
m1.nested.q<-glmer(resp~pred+pred.dist+nopred.dist+(1|subj)+(1|item),subset(data1, pos=="?"), family=binomial())
summary(m1.nested.q)
barplot(meansq,beside=T)
data1<-read.table("pretest1.csv", header=T, sep = "\t")
setwd("~/Dropbox/Persian CP  (pre-tests, SPR & ET)/1. Pretests")
data1<-read.table("pretest1.csv", header=T, sep = "\t")
data1<-read.table("pretest1.csv", header=T, sep = "\t")
setwd("~/Dropbox/Persian CP  (pre-tests, SPR & ET)/1. Pretests")
data1<-read.table("pretest1.csv", header=T, sep = "\t")
data1<-read.table("Pretest-1-sentence completion/pretest1.csv", header=T, sep = "\t")
colnames(data1)<-c("exp", "group","subj","item","cond","resp")
head(data1)
data1$resp<-factor(data1$resp)
data1$cond<-factor(data1$cond)
exp1 <- subset(data1, exp==1)
exp2 <- subset(data1, exp==2)
exp1$resp<- as.numeric(as.character(exp1$resp))
means<-round(100*with(exp1, tapply(resp,cond,mean)), digits=0)
means
barplot(means,beside=T)
exp2$resp<- as.numeric(as.character(exp2$resp))
means2<-round(100*with(exp2, tapply(resp,cond,mean)), digits=0)
means2
mean(76,74)
means(76,74)
mean(76, 74)
exp1$dist<-ifelse(exp1$cond%in%c("a","c"),-1,1)
## pred 1, -1
exp1$pred<-ifelse(exp1$cond%in%c("a","b"),-1,1)
#nested
exp1$pred.dist <- ifelse(exp1$cond=="a",-1,
ifelse(exp1$cond=="b",1,0))
exp1$nopred.dist <- ifelse(exp1$cond=="c",-1,
ifelse(exp1$cond=="d",1,0))
m1<-glmer(resp~dist*pred+(1|subj)+(1|item),exp1,family=binomial())
summary(m1)
m1<-glmer(resp~dist*pred+(1|subj)+(1|item),exp1,family=binomial())
summary(m1)
exp2$dist<-ifelse(exp2$cond%in%c("a","c"),-1,1)
exp2$pred<-ifelse(exp2$cond%in%c("a","b"),-1,1)
#nested
exp2$pred.dist <- ifelse(exp2$cond=="a",-1,
ifelse(exp2$cond=="b",1,0))
exp2$nopred.dist <- ifelse(exp2$cond=="c",-1,
ifelse(exp2$cond=="d",1,0))
head(exp2)
m2<-glmer(resp~dist*pred+(1|subj)+(1|item),exp2,family=binomial())
summary(m2)
data2<-read.table("Pretest-2-acceptability-rating(sep-vs-insep)/pretest2.csv", header=T, sep = "\t")
head(data2)
data2$cond<-factor(data2$cond)
data2.item <- subset(data2, cond!='filler')
data2.item$cond <- droplevels(data2.item$cond)
data2.item$response<- as.numeric(as.character(data2.item$response))
means<-round(with(data2.item, tapply(response,cond,mean)), digits=0)
means
data2.item$cond<-factor(data2.item$cond,levels=c("b","a","c"))
contrasts(data2.item$cond)
data2.item$item2<-factor(paste(data2.item$item,
data2.item$cond,
sep=""))
M0<-lmer(response~cond+(1|subj)+(1|item2),
data2.item)
summary(M0)
M0<-lmer(response~cond+(1|subj)+(1|item2), data2.item, family=poisson())
M0<-glmer(response~cond+(1|subj)+(1|item2), data2.item, family=poisson())
summary(M0)
?contrasts
