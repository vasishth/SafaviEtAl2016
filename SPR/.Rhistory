library(lme4)
library(lattice)
library(Matrix)
sessionInfo()
install.packages('lme4')
library(lme4)
MD497.dat <- matrix(c(
420, 420, 480, 480, 600, 780,
420, 480, 480, 360, 480, 600,
480, 480, 540, 660, 780, 780,
420, 540, 540, 480, 780, 900,
540, 660, 540, 480, 660, 720,
360, 420, 360, 360, 480, 540,
480, 480, 600, 540, 720, 840,
480, 600, 660, 540, 720, 900,
540, 600, 540, 480, 720, 780,
480, 420, 540, 540, 660, 780),
ncol = 6, byrow = T)  # byrow=T so the matrix's layout is exactly like this
MD497.df <- data.frame(
rt    = as.vector(MD497.dat),
subj  = factor(rep(paste("s", 1:10, sep=""), 6)),
deg   = factor(rep(rep(c(0,4,8), c(10, 10, 10)), 2)),
noise = factor(rep(c("no.noise", "noise"), c(30, 30))))
(MD497.df)
(means<-with(MD497.df,tapply(rt,IND=list(noise,deg),mean)))
no.noise<-subset(MD497.df,noise=="no.noise")
no.noise.means<-with(no.noise,tapply(rt,subj,mean))
noise<-subset(MD497.df,noise=="noise")
noise.means<-with(noise,tapply(rt,subj,mean))
t.test(noise.means,no.noise.means,paired=TRUE)
with(MD497.df,tapply(rt,noise,mean))
with(MD497.df,tapply(rt,deg,mean))
summary(m0<-lm(rt~noise,MD497.df))
coef(m0)
with(MD497.df,tapply(rt,noise,mean))
res.m0<-residuals(m0)
library(car)
qqPlot(res.m0)
head(model.matrix(m0),n=7)
contrasts(MD497.df$deg)
summary(m1<-lm(rt~deg,MD497.df))
with(MD497.df,tapply(rt,deg,mean))
summary(m2<-lm(rt~noise+deg,MD497.df))
bdata <- read.table("/home/samar/psych-research/books/stats/script/linearmodelsdata/beauty.txt",header=T)
head(bdata)
summary(m1<-lm(evaluation~beauty,bdata))
summary(m1<-lm(evaluation~beauty,bdata))
means.noise<-with(MD497.df,tapply(rt,list(subj,noise),mean))
means.deg<-with(MD497.df,tapply(rt,list(subj,deg),mean))
library(lattice)
print(xyplot(rt~noise|subj,
panel=function(x,y,...){panel.xyplot(x,y,type="r")},MD497.df))
print(xyplot(rt~deg|subj,
panel=function(x,y,...){panel.xyplot(x,y,type="r")},MD497.df))
s1data<-subset(MD497.df,subj=="s1")
lm(rt~noise,s1data)
subjects<-paste("s",rep(1:10),sep="")
for(i in subjects){
sdata<-subset(MD497.df,subj==i)
lm(rt~noise,sdata)
}
library(lme4)
lmlist.fm1<-lmList(rt~noise|subj,MD497.df)
(lmlist.fm1)
print(lmlist.fm1$s1)
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,axes=F,xlab="noise",ylab="rt")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
subjects<-paste("s",1:10,sep="")
for(i in subjects){
abline(lmlist.fm1[[i]])
}
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
t.test(coef(lmlist.fm1)[2])
summary(m0.lmer<-lmer(rt~noise+(1|subj),MD497.df))
ranef(m0.lmer)
print(dotplot(ranef(m0.lmer,postVar=TRUE)))
(a<-fixef(m0.lmer)[1])
(newa<-a+ranef(m0.lmer)$subj)
ab<-data.frame(newa=newa,b=fixef(m0.lmer)[2])
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,
xlab="noise",ylab="rt",axes=F)
axis(1,at=c(0,1),
labels=c("no.noise","noise"))
axis(2)
for(i in 1:10){
abline(a=ab[i,1],b=ab[i,2])
}
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
summary(m1.lmer<-lmer(rt~noise+(1+noise|subj),MD497.df))
ranef(m1.lmer)
(a<-fixef(m1.lmer)[1])
(b<-fixef(m1.lmer)[2])
(newa<-a+ranef(m1.lmer)$subj[1])
(newb<-b+ranef(m1.lmer)$subj[2])
ab<-data.frame(newa=newa,b=newb)
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,
xlab="noise",ylab="rt",axes=F,
main="varying intercepts and slopes for each subject")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
for(i in 1:10){
abline(a=ab[i,1],b=ab[i,2])
}
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
multiplot <- function(row,col){
par(mfrow=c(row,col),pty="s")
}
multiplot(1,2)
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,axes=F,xlab="noise",ylab="rt",main="ordinary linear model")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
subjects<-paste("s",1:10,sep="")
for(i in subjects){
abline(lmlist.fm1[[i]])
}
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
(a<-fixef(m1.lmer)[1])
(b<-fixef(m1.lmer)[2])
(newa<-a+ranef(m1.lmer)$subj[1])
(newb<-b+ranef(m1.lmer)$subj[2])
ab<-data.frame(newa=newa,b=newb)
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,axes=F,
main="varying intercepts and slopes",
xlab="noise",ylab="rt")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
for(i in 1:10){
abline(a=ab[i,1],b=ab[i,2])
}
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
MD497.df2<-read.table("/home/samar/psych-research/books/stats/script/MD497df.txt",header=T)
with(MD497.df,tapply(rt,list(subj,noise),mean,na.rm=TRUE))
with(MD497.df2,tapply(rt,list(subj,noise),mean,na.rm=TRUE))
(lmlist.fm2<-lmList(rt~noise|subj,MD497.df2))
summary(m2.lmer<-lmer(rt~noise+(1+noise|subj),MD497.df2))
multiplot <- function(row,col){
par(mfrow=c(row,col),pty="s")
}
multiplot(2,2)
plot(as.numeric(MD497.df2$noise)-1,MD497.df2$rt,axes=F,xlab="noise",ylab="rt",main="ordinary linear model",sub="s8, missing data")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(lmlist.fm2$s8)
abline(lm(rt~noise,MD497.df2),lwd=3,col="red")
(a<-fixef(m2.lmer)[1])
(b<-fixef(m2.lmer)[2])
(newa<-a+ranef(m2.lmer)$subj[1])
(newb<-b+ranef(m2.lmer)$subj[2])
ab<-data.frame(newa=newa,b=newb)
plot(as.numeric(MD497.df2$noise)-1,MD497.df2$rt,axes=F,
main="varying intercepts and slopes",
sub="s8, missing data",
xlab="noise",ylab="rt")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(a=ab[9,1],b=ab[9,2])
abline(lm(rt~noise,MD497.df2),lwd=3,col="red")
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,axes=F,xlab="noise",ylab="rt",main="ordinary linear model",
,sub="s8, no missing data")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(lmlist.fm1$s8)
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
(a<-fixef(m2.lmer)[1])
(b<-fixef(m2.lmer)[2])
(newa<-a+ranef(m1.lmer)$subj[1])
(newb<-b+ranef(m1.lmer)$subj[2])
ab<-data.frame(newa=newa,b=newb)
plot(as.numeric(MD497.df$noise)-1,MD497.df$rt,axes=F,
main="varying intercepts and slopes",sub="s8, no missing data",xlab="noise",ylab="rt")
axis(1,at=c(0,1),labels=c("no.noise","noise"))
axis(2)
abline(a=ab[9,1],b=ab[9,2])
abline(lm(rt~noise,MD497.df),lwd=3,col="red")
library(languageR)
head(lexdec[,c(1,2,5)])
install.packages('languageR')
library(languageR)
head(lexdec[,c(1,2,5)])
means.lexdec<-with(lexdec,tapply(RT,NativeLanguage,mean))
summary(lm(RT~NativeLanguage,lexdec))
sessionInfo
sessionInfo()
install.packages("em")
sessionInfo
sessionInfo()
install.packages("em")
installed.packages()
?scale
library(em2)
?em2
library(em2)
?em2
library(stan)
setwd("~/Dropbox/Persian CP  (pre-tests, SPR & ET)/2. SPR")
data1<-read.table("Persiane1-regions.DAT", header=T)
data2<-read.table("Persiane2-regions.DAT", header=T)
data1$pos<-factor(data1$pos)
data1$resp<-factor(data1$resp)
data1$cond<-factor(data1$cond)
data1$dist<-ifelse(data1$cond%in%c("a","c"),-1,1)
## pred 1, -1
data1$pred<-ifelse(data1$cond%in%c("a","b"),-1,1)
#nested
data1$pred.dist <- ifelse(data1$cond=="a",-1,
ifelse(data1$cond=="b",1,0))
data1$nopred.dist <- ifelse(data1$cond=="c",-1,
ifelse(data1$cond=="d",1,0))
datae1<-data1
data2$pos<-factor(data2$pos)
data2$resp<-factor(data2$resp)
data2$cond<-factor(data2$cond)
data2.q <- subset(data2, pos=="?")
data2$dist<-ifelse(data2$cond%in%c("a","c"),-1,1)
## pred 1, -1
data2$pred<-ifelse(data2$cond%in%c("a","b"),-1,1)
#nested
data2$pred.dist <- ifelse(data2$cond=="a",-1,
ifelse(data2$cond=="b",1,0))
data2$nopred.dist <- ifelse(data2$cond=="c",-1,
ifelse(data2$cond=="d",1,0))
datae2<-data2
datae1$expt<-factor("e1")
datae2$expt<-factor("e2")
datae1$subj<-factor(paste(datae1$expt,datae1$subj,sep=""))
datae2$subj<-factor(paste(datae2$expt,datae2$subj,sep=""))
datae1$item<-factor(paste(datae1$expt,datae1$item,sep=""))
datae2$item<-factor(paste(datae2$expt,datae2$item,sep=""))
alldata<-rbind(datae1,datae2)
m.combined<-lmer(log(rt)~pred*dist*expt+(1|subj)+(1|item),subset(alldata,rt<3000 & roi=="crit"))
library(lme4)
m.combined<-lmer(log(rt)~pred*dist*expt+(1|subj)+(1|item),subset(alldata,rt<3000 & roi=="crit"))
summary(m.combined)
